version: "3"

services:
  db:
    image: mariadb:10.5
    restart: unless-stopped
    networks:
      - backend
    environment:
      - MYSQL_DATABASE=$MYSQL_DATABASE
      - MYSQL_USER=$MYSQL_USER
      - MYSQL_PASSWORD=$MYSQL_PASSWORD
      - MYSQL_RANDOM_ROOT_PASSWORD=1
    volumes:
      - photoview_db:/var/lib/mysql

  photoview:
    image: viktorstrate/photoview:2
    restart: unless-stopped
    networks:
      - backend
      - proxy_network
    # ports:
    #   - "8000:80"
    depends_on:
      - db
    environment:
      - PHOTOVIEW_SECRET=$MYSQL_PASSWORD
      - PHOTOVIEW_DATABASE_DRIVER=mysql
      - PHOTOVIEW_MYSQL_URL=$PHOTOVIEW_MYSQL_URL # contains sql password
      - PHOTOVIEW_LISTEN_IP=photoview
      - PHOTOVIEW_LISTEN_PORT=80
      - PHOTOVIEW_MEDIA_CACHE=/app/cache
      # - GODEBUG=asyncpreemptoff=1 # Enable the following Godebug
      # Optional: To enable map related features, you need to create a mapbox token.
      # - MAPBOX_TOKEN=<YOUR TOKEN HERE>
    volumes:
      - api_cache:/app/cache
      # Change This: to the directory where your photos are located on your server.
      # If the photos are located at `/home/user/photos`, then change this value
      # to the following: `/home/user/photos:/photos:ro`.
      # You can mount multiple paths, if your photos are spread across multiple directories.
      - ./photos_path:/photos:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=$PROXY_NETWORK"
      - "traefik.http.routers.photoview.rule=Host(`$PUBLIC_HOSTNAME`)"
      - "traefik.http.routers.photoview.tls=true"
      # - "traefik.http.routers.photoview.tls.certresolver=letsencrypt" # when using tlsChallenge certresolver

volumes:
  photoview_db:
  api_cache:

networks:
  backend:
  proxy_network:
    name: $PROXY_NETWORK
    external: true
