version: "3.4"

services:
  # your traefik config
  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    restart: unless-stopped
    dns:
      - 1.1.1.1
      - 8.8.8.8
    networks:
      - proxy_network
    ports:
      - "80:80"
      - "443:443"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      # Traefik settings
      - "--log.level=INFO" # level: debug, info, warning, error, critical
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=false"
      - "--serverstransport.insecureskipverify=true" # when forwarding to selfsigned
      # Configure entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      # Enable dashboard
      - "--api=true"
      - "--api.dashboard=true"
      - "--api.insecure=false"
      # CrowdSec
      - "--entrypoints.web.http.middlewares=crowdsec-bouncer@docker"
      - "--entrypoints.websecure.http.middlewares=crowdsec-bouncer@docker"
      - "--accessLog=true"
      - "--accessLog.filePath=/var/log/crowdsec/traefik.log"
      - "--accessLog.bufferingSize=100" # Configuring a buffer of 100 lines
      - "--accessLog.filters.statusCodes=204-299,400-499,500-59" # Statut code to log
    security_opt:
      - no-new-privileges:true
    environment:
      - ACME_EMAIL=$ACME_EMAIL
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_certs:/letsencrypt
      # crowdsec
      - traefik_access_log:/var/log/crowdsec/
    labels:
      - "traefik.enable=$DASHBOARDENABLED"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.rule=Host(`t.$DOMAINNAME`)"

  # init for parser files
  init_parser:
    image: busybox
    container_name: "init_parser"
    command:
      - sh
      - -c
      - |
        cat > /etc/crowdsec/acquis.yaml << EOF
        ---
        filenames:
          - /var/log/crowdsec/traefik.log
        labels:
          type: traefik
        EOF
        cat /etc/crowdsec/acquis.yaml
    volumes:
      - crowdsec_config:/etc/crowdsec

  crowdsec:
    depends_on:
      init_parser:
        condition: service_completed_successfully
    image: crowdsecurity/crowdsec
    container_name: crowdsec
    restart: unless-stopped
    networks:
      - proxy_network
    # expose:
    #   - 8080
    environment:
      PGID: "1000"
      COLLECTIONS: "crowdsecurity/traefik crowdsecurity/http-cve"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - traefik_access_log:/var/log/crowdsec:ro
      - crowdsec_db:/var/lib/crowdsec/data
      - crowdsec_config:/etc/crowdsec

  crowdsec-traefik-bouncer:
    depends_on:
      - crowdsec
    image: fbonalair/traefik-crowdsec-bouncer
    container_name: bouncer-traefik
    restart: unless-stopped
    networks:
      - proxy_network
    environment:
      CROWDSEC_BOUNCER_API_KEY: $CROWDSEC_BOUNCER_API_KEY
      CROWDSEC_AGENT_HOST: crowdsec:8080
      GIN_MODE: release
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.crowdsec-bouncer.forwardauth.address=http://bouncer-traefik:8080/api/v1/forwardAuth"
      - "traefik.http.middlewares.crowdsec-bouncer.forwardauth.trustForwardHeader=true"
      - "traefik.http.services.crowdsec-bouncer.loadbalancer.server.port=8080"

volumes:
  traefik_certs:
  traefik_access_log:
  crowdsec_db:
  crowdsec_config:

networks:
  proxy_network:
    name: $PROXY_NETWORK
    external: true