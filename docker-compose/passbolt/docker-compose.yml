# run following command inside container to create first user
# /usr/share/php/passbolt/bin/cake passbolt register_user -u <USERNAME_EMAIL> -f <FIRSTNAME> -l <LASTNAME> -r admin
version: '3.9'
services:
  db:
    image: mariadb:10.3
    container_name: mariadb
    restart: unless-stopped
    networks:
      - backend
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "true"
      MYSQL_DATABASE: "$PASSBOLT_DB_NAME"
      MYSQL_USER: "$PASSBOLT_DB_USER"
      MYSQL_PASSWORD: "$PASSBOLT_DB_PASS"
    volumes:
      - database_volume:/var/lib/mysql

  passbolt:
    #image: passbolt/passbolt:latest-ce
    image: passbolt/passbolt:latest-ce-non-root # non-root container should always be prefered
    container_name: passbolt
    restart: unless-stopped
    networks:
      - proxy_network
      - backend
    depends_on:
      - db
    environment:
      APP_FULL_BASE_URL: "https://$PUBLIC_HOSTNAME"
      DATASOURCES_DEFAULT_HOST: "db"
      DATASOURCES_DEFAULT_USERNAME: "$PASSBOLT_DB_USER"
      DATASOURCES_DEFAULT_PASSWORD: "$PASSBOLT_DB_PASS"
      DATASOURCES_DEFAULT_DATABASE: "$PASSBOLT_DB_NAME"
      EMAIL_TRANSPORT_DEFAULT_HOST: "$EMAIL_TRANSPORT_DEFAULT_HOST"
      EMAIL_TRANSPORT_DEFAULT_PORT: "587"
      EMAIL_TRANSPORT_DEFAULT_USERNAME: "$EMAIL_TRANSPORT_DEFAULT_USERNAME"
      EMAIL_TRANSPORT_DEFAULT_PASSWORD: "$EMAIL_TRANSPORT_DEFAULT_PASSWORD"
      EMAIL_TRANSPORT_DEFAULT_TLS: "true"
      EMAIL_DEFAULT_FROM: "$EMAIL_DEFAULT_FROM"
    volumes:
      - gpg_volume:/etc/passbolt/gpg
      - jwt_volume:/etc/passbolt/jwt
    command: ["/usr/bin/wait-for.sh", "-t", "0", "db:3306", "--", "/docker-entrypoint.sh"]
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=$PROXY_NETWORK"
      - "traefik.http.routers.passbolt.rule=Host(`$PUBLIC_HOSTNAME`)"
      - "traefik.http.routers.passbolt.tls=true"
      - "traefik.http.services.passbolt.loadbalancer.server.port=4433"
      - "traefik.http.services.passbolt.loadbalancer.server.scheme=https"
      # - "traefik.http.routers.traefik.tls.certresolver=letsencrypt" # when using tlsChallenge certresolver

volumes:
  database_volume:
  gpg_volume:
  jwt_volume:

networks:
  backend:
  proxy_network:
    name: $PROXY_NETWORK
    external: true