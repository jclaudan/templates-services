# create user: sudo docker-compose run --rm webserver createsuperuser
version: "3.4"
services:
  db:
    image: docker.io/library/postgres:13
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - paperless_db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless

  broker:
    image: docker.io/library/redis:6.0
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - redis_data:/data


  paperless-ngx:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    networks:
      - backend
      - proxy_network
    depends_on:
      - db
      - broker
    # ports:
    #   - 8000:8000
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - paperless_data:/usr/src/paperless/data
      - paperless_media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
    environment:
      PAPERLESS_URL: https://$PUBLIC_HOSTNAME
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_TIME_ZONE: Europe/Berlin
      USERMAP_UID: 1026
    labels:
     - "traefik.enable=true"
     - "traefik.docker.network=$PROXY_NETWORK"
     - "traefik.http.routers.paperless.rule=Host(`$PUBLIC_HOSTNAME`)"
     - "traefik.http.routers.paperless.tls=true"
     - "traefik.http.services.paperless.loadbalancer.server.port=8000"

volumes:
  redis_data:
  paperless_db:
  paperless_data:
  paperless_media:

networks:
  backend:
  proxy_network:
    name: $PROXY_NETWORK
    external: true