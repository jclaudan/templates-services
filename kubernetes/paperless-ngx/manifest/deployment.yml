# db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx-db
  namespace: my-paperless-ngx
  labels:
    app: paperless-ngx-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx-db
  template:
    metadata:
      labels:
        app: paperless-ngx-db
    spec:
      containers:
        - name: paperless-ngx-db
          image: docker.io/library/postgres:13
          ports:
            - containerPort: 5432
          resources: {}
          envFrom:
            - configMapRef:
                name: paperless-ngx-db-cm
            - secretRef:
                name: paperless-ngx-db-secret
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx-db
  namespace: my-paperless-ngx
  labels:
    app: paperless-ngx-db
spec:
  ports:
    - port: 5432
  selector:
    app: paperless-ngx-db

# redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx-redis
  namespace: my-paperless-ngx
  labels:
    app: paperless-ngx-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx-redis
  template:
    metadata:
      labels:
        app: paperless-ngx-redis
    spec:
      containers:
        - name: paperless-ngx-redis
          image: docker.io/library/redis:6.0
          ports:
            - containerPort: 6379
          resources: {}
          volumeMounts:
            - name: redis-storage
              mountPath: /data
      restartPolicy: Always
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx-redis
  namespace: my-paperless-ngx
  labels:
    app: paperless-ngx-redis
spec:
  ports:
    - port: 6379
  selector:
    app: paperless-ngx-redis

# paperless-ngx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx-app
  namespace: my-paperless-ngx
  labels:
    app: paperless-ngx-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx-app
  template:
    metadata:
      labels:
        app: paperless-ngx-app
    spec:
      containers:
        - name: paperless-ngx-app
          image: ghcr.io/paperless-ngx/paperless-ngx:latest
          ports:
            - containerPort: 8000
          resources: {}
          envFrom:
            - configMapRef:
                name: paperless-ngx-app-cm
          livenessProbe:
            exec:
              command:
                - curl
                - -fs
                - -S
                - --max-time
                - "2"
                - http://localhost:8000
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 10
          volumeMounts:
            - name: paperless-storage
              subPath: data
              mountPath: /usr/src/paperless/data
            - name: paperless-storage
              subPath: media
              mountPath: /usr/src/paperless/media
            - name: paperless-storage
              subPath: export
              mountPath: /usr/src/paperless/export
            - name: paperless-storage
              subPath: consume
              mountPath: /usr/src/paperless/consume
      restartPolicy: Always
      volumes:
        - name: paperless-storage
          persistentVolumeClaim:
            claimName: paperless-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx-app
  namespace: my-paperless-ngx
  labels:
    app: paperless-ngx-app
spec:
  ports:
    - port: 8000
  selector:
    app: paperless-ngx-app