---
apiVersion: v1
kind: ConfigMap
metadata:
  name: netmaker-cm
  namespace: my-netmaker
data:
  API_PORT: "8081"
  BROKER_ENDPOINT: "wss://broker.NETMAKER_BASE_DOMAIN"
  COREDNS_ADDR: "10.43.82.63"
  CORS_ALLOWED_ORIGIN: '*'
  DATABASE: sqlite
  DEFAULT_PROXY_MODE: "off"
  DISPLAY_KEYS: "on"
  DNS_MODE: "on"
  # MASTER_KEY: REPLACE_MASTER_KEY moved to secret
  NETCLIENT_AUTO_UPDATE: enabled
  NODE_ID: netmaker-server-1
  SERVER_NAME: broker.NETMAKER_BASE_DOMAIN
  SERVER_API_CONN_STRING: api.NETMAKER_BASE_DOMAIN:443
  SERVER_BROKER_ENDPOINT: ws://netmaker-mq:1883
  # SERVER_HOST: SERVER_PUBLIC_IP
  SERVER_HTTP_HOST: api.NETMAKER_BASE_DOMAIN
  STUN_LIST: stun.NETMAKER_BASE_DOMAIN:3478,stun1.netmaker.io:3478,stun2.netmaker.io:3478,stun1.l.google.com:19302,stun2.l.google.com:19302
  STUN_PORT: "3478"
  VERBOSITY: "2"

  # for netmaker-ui
  BACKEND_URL: https://api.NETMAKER_BASE_DOMAIN # frontend --> backend communication

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: netmaker-oauth
  namespace: my-netmaker
data:
  # AUTH_PROVIDER: "<azure-ad|github|google|oidc>"
  # CLIENT_ID: "<client id of your oauth provider>"
  # CLIENT_SECRET: "<client secret of your oauth provider>"
  # SERVER_HTTP_HOST: "api.<netmaker base domain>" # already in netmaker-cm
  # FRONTEND_URL: "https://dashboard.<netmaker base domain>"
  # AZURE_TENANT: "<only for azure, you may optionally specify the tenant for the OAuth>"
  # OIDC_ISSUER: "<only for oidc, your issuer endpoint for OIDC ie. http://127.0.0.1:5556/dex"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto-cm
  namespace: my-netmaker
data:
  MQ_USERNAME: REPLACE_MQ_USERNAME
  mosquitto.conf: |
    per_listener_settings false
    listener 8883
    protocol websockets
    allow_anonymous false

    listener 1883
    protocol websockets
    allow_anonymous false

    password_file /mosquitto/password.txt
  wait.sh: |
    #!/bin/ash

    encrypt_password() {
      echo "${MQ_USERNAME}:${MQ_PASSWORD}" > /mosquitto/password.txt
      mosquitto_passwd -U /mosquitto/password.txt
    }

    main(){

    encrypt_password
    echo "Starting MQ..."
    # Run the main container command.
    /docker-entrypoint.sh
    /usr/sbin/mosquitto -c /mosquitto/config/mosquitto.conf

    }

    main "${@}"