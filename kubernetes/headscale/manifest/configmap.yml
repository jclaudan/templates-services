---
apiVersion: v1
kind: ConfigMap
metadata:
  name: headscale-cm
  namespace: my-headscale
data:
  PUBLIC_HOSTNAME: hs.local.127.0.0.1.sslip.io
  BASE_DOMAIN: tail.net
  IPV4_PREFIX: "100.64.0.0/10"

  # relaying
  DERB_ENABLED: "true"
  DERB_TAILSCALELIST: "false"
  LETSENCRYPT_HOSTNAME: "" # blank to disable
  DB_TYPE: "sqlite3"
  DB_PATH: "/var/lib/headscale/db.sqlite"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: headscale-files-cm
  namespace: my-headscale
data:
  # https://github.com/juanfont/headscale/blob/main/docs/acls.md
  # BAD ACL BREAK DEPLOYMENT !!!!
  # default any to any, need deployment restart after changes
  acl.yaml: |
    ---
    acls:
      - action: accept
        src:
          - '*'
        dst:
          - '*:*'
  # https://raw.githubusercontent.com/juanfont/headscale/main/config-example.yaml
  config.yaml.tmpl: |
    server_url: https://<PUBLIC_HOSTNAME> # using own proxy
    listen_addr: 0.0.0.0:8080
    metrics_listen_addr: 0.0.0.0:9090
    grpc_listen_addr: 0.0.0.0:50443
    grpc_allow_insecure: false
    private_key_path: /var/lib/headscale/private.key
    noise:
      private_key_path: /var/lib/headscale/noise_private.key
    ip_prefixes:
      - fd7a:115c:a1e0::/48
      - <IPV4_PREFIX>
    derp:
      server:
        enabled: <DERB_ENABLED>
        region_id: 999
        region_code: "headscale"
        region_name: "Headscale Embedded DERP"
        stun_listen_addr: "0.0.0.0:3478"
        # stun_listen_addr: "<POD_IP>:3478"
      #urls: [ 'https://controlplane.tailscale.com/derpmap/default' ]
      paths: []
      auto_update_enabled: true
      update_frequency: 24h
    disable_check_updates: false
    ephemeral_node_inactivity_timeout: 30m
    node_update_check_interval: 10s
    db_type: <DB_TYPE>
    db_path: /var/lib/headscale/db.sqlite
    acme_url: https://acme-v02.api.letsencrypt.org/directory
    acme_email: ""
    tls_letsencrypt_hostname: "<LETSENCRYPT_HOSTNAME>"
    tls_letsencrypt_cache_dir: /var/lib/headscale/cache
    tls_letsencrypt_challenge_type: HTTP-01
    tls_letsencrypt_listen: ":http"
    tls_cert_path: ""
    tls_key_path: ""
    log:
      format: text
      level: info
    acl_policy_path: /etc/headscale/acl.yaml
    dns_config:
      override_local_dns: true
      nameservers:
        - 1.1.1.1
      domains: []
      magic_dns: true
      base_domain: <BASE_DOMAIN>

    unix_socket: /var/run/headscale/headscale.sock
    unix_socket_permission: "0770"
    logtail:
      enabled: false
    randomize_client_port: false
  init_config.sh: |
    #!/bin/bash
    CONFIG_YAML_PATH="/etc/headscale/config.yaml"
    ACL_YAML_PATH="/etc/headscale/acl.yaml"
    echo "Running init script"

    echo -n "
    ------------Settings------------
    PUBLIC_HOSTNAME: $PUBLIC_HOSTNAME
    BASE_DOMAIN: $BASE_DOMAIN
    DERB_ENABLED: $DERB_ENABLED
    LETSENCRYPT_HOSTNAME: $LETSENCRYPT_HOSTNAME
    DB_TYPE: $DB_TYPE
    DB_PATH: $DB_PATH
    IPV4_PREFIX: $IPV4_PREFIX

    "
    # create sock file for gRPC
    touch /var/run/headscale/headscale.sock
    # create sql lite file if needed
    test -f $DB_PATH || (touch $DB_PATH && echo new db.sqlite file created)

    # update config.yaml
    echo "create config file"
    cat /config.yaml.tmpl |
        sed "s/<PUBLIC_HOSTNAME>/$PUBLIC_HOSTNAME/g" |
        sed "s/<BASE_DOMAIN>/$BASE_DOMAIN/g" |
        sed "s/<DERB_ENABLED>/$DERB_ENABLED/g" |
        sed "s/<LETSENCRYPT_HOSTNAME>/$LETSENCRYPT_HOSTNAME/g" |
        sed "s/<DB_TYPE>/$DB_TYPE/g" |
        sed "s=<DB_PATH>=$DB_PATH=g" |
        sed "s=<IPV4_PREFIX>=$IPV4_PREFIX=g" > $CONFIG_YAML_PATH

    # enable public tailscale DERP list
    if [[ "$DERB_TAILSCALELIST" == "true" ]]
    then
        sed -i "s/#urls/urls/g" $CONFIG_YAML_PATH
    fi

    echo '---------CONTENT OF config.yaml---------
    '
    cat $CONFIG_YAML_PATH

    echo '---------CONTENT OF acl.yaml---------
    '
    cat $ACL_YAML_PATH